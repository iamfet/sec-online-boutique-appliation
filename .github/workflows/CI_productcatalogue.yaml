name: Product Catalog CI

on:
  pull_request:
    branches: [main]
    paths:
      - 'src/productcatalogservice/**'
      - '.github/workflows/CI_productcatalogue.yaml'

env:
  GO_VERSION: '1.22'
  SERVICE_PATH: './src/productcatalogservice'
  IMAGE_NAME: 'productcatalogservice'

jobs:
  build-and-test:
    name: Build & Test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Download dependencies
        working-directory: ${{ env.SERVICE_PATH }}
        run: go mod download

      - name: Build application
        working-directory: ${{ env.SERVICE_PATH }}
        run: go build -v -o product-catalog-service

      - name: Run tests with coverage
        working-directory: ${{ env.SERVICE_PATH }}
        run: |
          go test -v -coverprofile=coverage.out ./...

  code-quality:
    name: Code Quality
    runs-on: ubuntu-latest
    needs: build-and-test
    continue-on-error: true
    permissions:
      security-events: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      
      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: latest
          working-directory: ${{ env.SERVICE_PATH }}
          args: --timeout=5m --output.text.path=stdout --output.sarif.path=golangci-lint.sarif

  gitleaks-scan:
    name: Gitleaks Secret Scan
    runs-on: ubuntu-latest
    needs: build-and-test
    continue-on-error: true
    permissions:
      security-events: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Run gitleaks with Docker
        run: |
          docker run --rm \
            -v $(pwd):/repo \
            zricethezav/gitleaks:latest \
            detect --source=/repo \
            --report-path=/repo/gitleaks.sarif \
            --report-format=sarif \
            --exit-code=0

  snyk-security-scan:
    name: Snyk Security Scan
    runs-on: ubuntu-latest
    needs: build-and-test
    continue-on-error: true
    permissions:
      security-events: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/golang@master
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --sarif-file-output=snyk.sarif ./src/productcatalogservice
